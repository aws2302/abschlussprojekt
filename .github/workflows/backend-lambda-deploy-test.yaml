name: Backend Lambda Deploy
run-name: Build and Deploy Lambda by üöÄ ${{ github.actor }} ü§ñ
on:
  push:
    branches:
      - dev-karim
    paths:
      - 'lambdas/**'
    # tags:
    #   - test-cicd-karim
env:
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN || 'default' }}
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY || 'default' }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY || 'default' }}
  AWS_ENDPOINT_URL_SSO: ${{ vars.AWS_ENDPOINT_URL_SSO || 'default' }}
  AWS_PROFILE: ${{ vars.AWS_PROFILE || 'techstarter' }}
  GITHUB_LAST_PUSH: ${{ vars.GITHUB_LAST_PUSH || github.event.before }}
jobs:
  Lambda-Code-Or-Function:
    runs-on: ubuntu-latest
    outputs:
      LAMBDA_TF: ${{ steps.python-script.outputs.LAMBDA_TF }}
    steps:
      - name: Lade neuen Repo-Zustand
        uses: actions/checkout@v4
      - name: erstelle ./pre-push-repo
        run: mkdir ./pre-push-repo
      - name: Lade letzten Repo-Zustand in ./pre-push-repo
        uses: actions/checkout@v4
        with:
          path: './pre-push-repo'
          ref: ${{ vars.GITHUB_LAST_PUSH }}
      - name: installiere NodeJs und npm
        uses: actions/setup-node@v4
        with:
          node-version: '>=18.0.0'
      - name: installiere Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
      - name: Pr√ºfe Bedingungen und erstelle ZIP's
        run: python .worklfows/scripts/handle_lambdas.py
        id: python-script
      - uses: actions/upload-artifact@v4
        with:
          name: Lambda-Zips
          path: "~/lambdas/artifacts"
  Lambda-Update-Code:
    if: ${{ ! env.LAMBDA_TF }}
    runs-on: ubuntu-latest
    needs: Lambda-Code-Or-Function
    env:
      LAMBDA_TF: ${{ needs.Lambda-Code-Or-Function.outputs.LAMBDA_TF }}
    steps:
      - name: Get Lambda-Zips
        uses: actions/download-artifact@v4
        with:
          name: Lambda-Zips
          path: "~/lambdas/artifacts"
      - name: Echo LAMBDA_TF
        run: echo ${{ env.LAMBDA_TF }}
      - name: Echo artifacts
        run: ls -la ~/lambdas/artifacts
      # Update Lambda Funktion
      # - name: Update Lambda Code with AWS Lambda Deploy Action
      #   uses: actions/checkout@v4
      # - name: default deploy
      #   uses: appleboy/lambda-action@v0.1.9
      #   with:
      #     aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws_region: ${{ secrets.AWS_REGION }}
      #     function_name: gorush
      #     zip_file: example/deployment.zip
      #     memory_size: 128
      #     timeout: 10
      #     handler: foobar
      #     role: arn:aws:iam::xxxxxxxxxxx:role/test1234
      #     runtime: nodejs12.x
# 
  # Lambda-Terraform-Deploy:
  #   # if: env.LAMBDA_TF == "True"
  #   runs-on: ubuntu-latest
  #   needs: Lambda-Code-Or-Function
  #   env:
  #     LAMBDA_TF: ${{ needs.Lambda-Code-Or-Function.outputs.LAMBDA_TF }}
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v4
  #     - name: Get Lambda-Zips
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: Lambda-Zips
  #         path: "~/lambdas/artifacts"